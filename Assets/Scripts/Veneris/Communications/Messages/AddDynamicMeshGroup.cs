/******************************************************************************/
// 
// Copyright (c) 2019 Esteban Egea-Lopez http://ait.upct.es/eegea
// 
/*******************************************************************************/



// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Veneris.Communications
{

using global::System;
using global::FlatBuffers;

public struct AddDynamicMeshGroup : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AddDynamicMeshGroup GetRootAsAddDynamicMeshGroup(ByteBuffer _bb) { return GetRootAsAddDynamicMeshGroup(_bb, new AddDynamicMeshGroup()); }
  public static AddDynamicMeshGroup GetRootAsAddDynamicMeshGroup(ByteBuffer _bb, AddDynamicMeshGroup obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AddDynamicMeshGroup __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<AddDynamicMeshGroup> CreateAddDynamicMeshGroup(FlatBufferBuilder builder,
      int id = 0) {
    builder.StartObject(1);
    AddDynamicMeshGroup.AddId(builder, id);
    return AddDynamicMeshGroup.EndAddDynamicMeshGroup(builder);
  }

  public static void StartAddDynamicMeshGroup(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static Offset<AddDynamicMeshGroup> EndAddDynamicMeshGroup(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AddDynamicMeshGroup>(o);
  }
  public static void FinishAddDynamicMeshGroupBuffer(FlatBufferBuilder builder, Offset<AddDynamicMeshGroup> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedAddDynamicMeshGroupBuffer(FlatBufferBuilder builder, Offset<AddDynamicMeshGroup> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
