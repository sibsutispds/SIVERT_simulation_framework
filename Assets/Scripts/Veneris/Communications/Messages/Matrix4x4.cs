/******************************************************************************/
// 
// Copyright (c) 2019 Esteban Egea-Lopez http://ait.upct.es/eegea
// 
/*******************************************************************************/



// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Veneris.Communications
{

using global::System;
using global::FlatBuffers;

public struct Matrix4x4 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Matrix4x4 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Vec4 R0 { get { return (new Vec4()).__assign(__p.bb_pos + 0, __p.bb); } }
  public Vec4 R1 { get { return (new Vec4()).__assign(__p.bb_pos + 16, __p.bb); } }
  public Vec4 R2 { get { return (new Vec4()).__assign(__p.bb_pos + 32, __p.bb); } }
  public Vec4 R3 { get { return (new Vec4()).__assign(__p.bb_pos + 48, __p.bb); } }

  public static Offset<Matrix4x4> CreateMatrix4x4(FlatBufferBuilder builder, float r0_X, float r0_Y, float r0_Z, float r0_W, float r1_X, float r1_Y, float r1_Z, float r1_W, float r2_X, float r2_Y, float r2_Z, float r2_W, float r3_X, float r3_Y, float r3_Z, float r3_W) {
    builder.Prep(4, 64);
    builder.Prep(4, 16);
    builder.PutFloat(r3_W);
    builder.PutFloat(r3_Z);
    builder.PutFloat(r3_Y);
    builder.PutFloat(r3_X);
    builder.Prep(4, 16);
    builder.PutFloat(r2_W);
    builder.PutFloat(r2_Z);
    builder.PutFloat(r2_Y);
    builder.PutFloat(r2_X);
    builder.Prep(4, 16);
    builder.PutFloat(r1_W);
    builder.PutFloat(r1_Z);
    builder.PutFloat(r1_Y);
    builder.PutFloat(r1_X);
    builder.Prep(4, 16);
    builder.PutFloat(r0_W);
    builder.PutFloat(r0_Z);
    builder.PutFloat(r0_Y);
    builder.PutFloat(r0_X);
    return new Offset<Matrix4x4>(builder.Offset);
  }
};


}
