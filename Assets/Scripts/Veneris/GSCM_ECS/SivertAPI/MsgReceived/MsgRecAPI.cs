// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SivertAPI.MsgReceived
{

using global::System;
using global::FlatBuffers;

public struct MsgRecAPI : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MsgRecAPI GetRootAsMsgRecAPI(ByteBuffer _bb) { return GetRootAsMsgRecAPI(_bb, new MsgRecAPI()); }
  public static MsgRecAPI GetRootAsMsgRecAPI(ByteBuffer _bb, MsgRecAPI obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MsgRecAPI __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Vec3Rx? Pos { get { int o = __p.__offset(4); return o != 0 ? (Vec3Rx?)(new Vec3Rx()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public PacketInfo? PackContent { get { int o = __p.__offset(6); return o != 0 ? (PacketInfo?)(new PacketInfo()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public string MsgContent { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMsgContentBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetMsgContentBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetMsgContentArray() { return __p.__vector_as_array<byte>(8); }

  public static void StartMsgRecAPI(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddPos(FlatBufferBuilder builder, Offset<Vec3Rx> posOffset) { builder.AddStruct(0, posOffset.Value, 0); }
  public static void AddPackContent(FlatBufferBuilder builder, Offset<PacketInfo> PackContentOffset) { builder.AddStruct(1, PackContentOffset.Value, 0); }
  public static void AddMsgContent(FlatBufferBuilder builder, StringOffset MsgContentOffset) { builder.AddOffset(2, MsgContentOffset.Value, 0); }
  public static Offset<MsgRecAPI> EndMsgRecAPI(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MsgRecAPI>(o);
  }
  public static void FinishMsgRecAPIBuffer(FlatBufferBuilder builder, Offset<MsgRecAPI> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedMsgRecAPIBuffer(FlatBufferBuilder builder, Offset<MsgRecAPI> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
