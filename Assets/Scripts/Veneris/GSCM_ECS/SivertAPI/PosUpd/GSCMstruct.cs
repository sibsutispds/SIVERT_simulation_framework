// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SivertAPI.PosUpd
{

using global::System;
using global::FlatBuffers;

public struct GSCMstruct : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GSCMstruct GetRootAsGSCMstruct(ByteBuffer _bb) { return GetRootAsGSCMstruct(_bb, new GSCMstruct()); }
  public static GSCMstruct GetRootAsGSCMstruct(ByteBuffer _bb, GSCMstruct obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GSCMstruct __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool UseGSCM { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public double RSS { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

  public static Offset<GSCMstruct> CreateGSCMstruct(FlatBufferBuilder builder,
      bool UseGSCM = false,
      double RSS = 0.0) {
    builder.StartObject(2);
    GSCMstruct.AddRSS(builder, RSS);
    GSCMstruct.AddUseGSCM(builder, UseGSCM);
    return GSCMstruct.EndGSCMstruct(builder);
  }

  public static void StartGSCMstruct(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddUseGSCM(FlatBufferBuilder builder, bool UseGSCM) { builder.AddBool(0, UseGSCM, false); }
  public static void AddRSS(FlatBufferBuilder builder, double RSS) { builder.AddDouble(1, RSS, 0.0); }
  public static Offset<GSCMstruct> EndGSCMstruct(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GSCMstruct>(o);
  }
};


}
