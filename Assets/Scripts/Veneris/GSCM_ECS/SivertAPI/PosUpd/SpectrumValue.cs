// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SivertAPI.PosUpd
{

using global::System;
using global::FlatBuffers;

public struct SpectrumValue : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SpectrumValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ChannelID { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public double PSDGainCoefficient { get { return __p.bb.GetDouble(__p.bb_pos + 8); } }
  public int CoefInd { get { return __p.bb.GetInt(__p.bb_pos + 16); } }

  public static Offset<SpectrumValue> CreateSpectrumValue(FlatBufferBuilder builder, int ChannelID, double PSDGainCoefficient, int CoefInd) {
    builder.Prep(8, 24);
    builder.Pad(4);
    builder.PutInt(CoefInd);
    builder.PutDouble(PSDGainCoefficient);
    builder.Pad(4);
    builder.PutInt(ChannelID);
    return new Offset<SpectrumValue>(builder.Offset);
  }
};


}
