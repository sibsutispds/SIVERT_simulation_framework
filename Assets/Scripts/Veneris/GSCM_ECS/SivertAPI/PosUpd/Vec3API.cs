// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SivertAPI.PosUpd
{

using global::System;
using global::FlatBuffers;

public struct Vec3API : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Vec3API __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public float Y { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public float Z { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }
  public int Id { get { return __p.bb.GetInt(__p.bb_pos + 12); } }

  public static Offset<Vec3API> CreateVec3API(FlatBufferBuilder builder, float X, float Y, float Z, int Id) {
    builder.Prep(4, 16);
    builder.PutInt(Id);
    builder.PutFloat(Z);
    builder.PutFloat(Y);
    builder.PutFloat(X);
    return new Offset<Vec3API>(builder.Offset);
  }
};


}
