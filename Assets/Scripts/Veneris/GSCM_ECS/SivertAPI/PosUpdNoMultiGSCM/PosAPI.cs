// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SivertAPI.PosUpdNoMultiGSCM
{

using global::System;
using global::FlatBuffers;

public struct PosAPI : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PosAPI GetRootAsPosAPI(ByteBuffer _bb) { return GetRootAsPosAPI(_bb, new PosAPI()); }
  public static PosAPI GetRootAsPosAPI(ByteBuffer _bb, PosAPI obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PosAPI __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GSCMstruct? GSCM { get { int o = __p.__offset(4); return o != 0 ? (GSCMstruct?)(new GSCMstruct()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public EEBL? CITS { get { int o = __p.__offset(6); return o != 0 ? (EEBL?)(new EEBL()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Vec3API? Pos(int j) { int o = __p.__offset(8); return o != 0 ? (Vec3API?)(new Vec3API()).__assign(__p.__vector(o) + j * 12, __p.bb) : null; }
  public int PosLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public VehInfo? Suppl(int j) { int o = __p.__offset(10); return o != 0 ? (VehInfo?)(new VehInfo()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int SupplLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public bool TerminateNS3 { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<PosAPI> CreatePosAPI(FlatBufferBuilder builder,
      Offset<GSCMstruct> GSCMOffset = default(Offset<GSCMstruct>),
      Offset<EEBL> CITSOffset = default(Offset<EEBL>),
      VectorOffset posOffset = default(VectorOffset),
      VectorOffset SupplOffset = default(VectorOffset),
      bool terminateNS3 = false) {
    builder.StartObject(5);
    PosAPI.AddSuppl(builder, SupplOffset);
    PosAPI.AddPos(builder, posOffset);
    PosAPI.AddCITS(builder, CITSOffset);
    PosAPI.AddGSCM(builder, GSCMOffset);
    PosAPI.AddTerminateNS3(builder, terminateNS3);
    return PosAPI.EndPosAPI(builder);
  }

  public static void StartPosAPI(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddGSCM(FlatBufferBuilder builder, Offset<GSCMstruct> GSCMOffset) { builder.AddOffset(0, GSCMOffset.Value, 0); }
  public static void AddCITS(FlatBufferBuilder builder, Offset<EEBL> CITSOffset) { builder.AddOffset(1, CITSOffset.Value, 0); }
  public static void AddPos(FlatBufferBuilder builder, VectorOffset posOffset) { builder.AddOffset(2, posOffset.Value, 0); }
  public static void StartPosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(12, numElems, 4); }
  public static void AddSuppl(FlatBufferBuilder builder, VectorOffset SupplOffset) { builder.AddOffset(3, SupplOffset.Value, 0); }
  public static void StartSupplVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static void AddTerminateNS3(FlatBufferBuilder builder, bool terminateNS3) { builder.AddBool(4, terminateNS3, false); }
  public static Offset<PosAPI> EndPosAPI(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PosAPI>(o);
  }
  public static void FinishPosAPIBuffer(FlatBufferBuilder builder, Offset<PosAPI> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedPosAPIBuffer(FlatBufferBuilder builder, Offset<PosAPI> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
